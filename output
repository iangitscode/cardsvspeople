diff --git a/client/src/app/game/game.component.html b/client/src/app/game/game.component.html
index 199f3f1..7aad6fe 100644
--- a/client/src/app/game/game.component.html
+++ b/client/src/app/game/game.component.html
@@ -4,33 +4,52 @@
       {{getCurrentBlackCardText() | async}}
     </div>
 
-    <div class="white-card-selection-container"
-         [ngClass]="getSelectionBoxLength() | async"
-         cdkDropList
-         #selections="cdkDropList"
-         [cdkDropListData]="getSelectedCards() | async"
-         [cdkDropListConnectedTo]="[hand]"
-         (cdkDropListDropped)="drop($event)"
-         id="selections"
-         cdkDropListOrientation="horizontal">
-       <div class="white-card-selection card white"
-            *ngFor="let card of (getSelectedCards() | async)"
-            cdkDrag>
-          <div class="custom-placeholder" *cdkDragPlaceholder></div>
-          {{card.text}}
-       </div>
-    </div>
+    <div class="main-stage">
 
-    <div class="white-card-submissions">
-      <div class="player-submissions"
-          *ngFor="let playerSubmission of (getWhiteCardSubmissions() | async); index as i"
-          (click)="selectSubmission(i)">
-          <div class="card white submitted"
-              *ngFor="let card of playerSubmission">
+      <div class="white-card-selection-container"
+           *ngIf="isStage(0) | async"
+           [ngClass]="getSelectionBoxLength() | async"
+           cdkDropList
+           #selections="cdkDropList"
+           [cdkDropListData]="getSelectedCards() | async"
+           [cdkDropListConnectedTo]="[hand]"
+           (cdkDropListDropped)="drop($event)"
+           id="selections"
+           cdkDropListOrientation="horizontal">
+         <div class="white-card-selection card white"
+              *ngFor="let card of (getSelectedCards() | async)"
+              cdkDrag>
+            <div class="custom-placeholder" *cdkDragPlaceholder></div>
             {{card.text}}
-          </div>
+         </div>
+      </div>
+
+      <div class="white-card-submissions"
+           *ngIf="isStage(1)">
+        <div class="player-submissions"
+            *ngFor="let playerSubmission of (getWhiteCardSubmissions() | async); index as i"
+            (click)="selectSubmission(i)">
+            <div class="card white submitted"
+                *ngFor="let card of playerSubmission">
+              {{card.text}}
+            </div>
+        </div>
+      </div>
+
+    </div>
+
+    <div class="scores-container">
+      <div class="score"
+           *ngFor="let score of (getScores() | async)">
+         <div class="name">
+          {{score[0]}}
+         </div>
+         <div class="points">
+          {{score[1]}}
+         </div>
       </div>
     </div>
+
   </div>
 
   <div class="bottom-row">
@@ -56,15 +75,4 @@
         Submit
     </div>
   </div>
-
-  <div class="scores-container">
-    <div class="score"
-         *ngFor="let score of (getScores() | async)">
-         <div class="name">
-          {{score[0]}}
-         </div>
-         <div class="points">
-          {{score[1]}}
-         </div>
-  </div>
-</div>
\ No newline at end of file
+</div>
diff --git a/client/src/app/game/game.component.less b/client/src/app/game/game.component.less
index 33e8b47..156eb13 100644
--- a/client/src/app/game/game.component.less
+++ b/client/src/app/game/game.component.less
@@ -21,47 +21,53 @@
 
   .top-row {
     display: flex;
+    justify-content: space-between;
     height: 600px;
     width: 100%;
     overflow: auto;
 
-    .white-card-selection-container {
-      min-width: @card-width + @card-margin * 2;
-      border: 1px solid black;
-      display: flex;
-      padding: 7px;
-      height: @card-height + @card-margin * 2;
+    .main-stage {
 
-      &.two {
-        width: @card-width * 2 + @card-margin * 4;
-      }
+      .white-card-selection-container {
+        min-width: @card-width + @card-margin * 2;
+        border: 1px solid black;
+        display: flex;
+        padding: 7px;
+        height: @card-height + @card-margin * 2;
 
-      &.three {
-        width: @card-width * 3 + @card-margin * 6; 
-      }
+        &.two {
+          width: @card-width * 2 + @card-margin * 4;
+        }
 
-      &.four {
-        width: @card-width * 4 + @card-margin * 8;
-      }
+        &.three {
+          width: @card-width * 3 + @card-margin * 6; 
+        }
 
-      &.five {
-        width: @card-width * 5 + @card-margin * 10;
+        &.four {
+          width: @card-width * 4 + @card-margin * 8;
+        }
+
+        &.five {
+          width: @card-width * 5 + @card-margin * 10;
+        }
       }
-    }
 
-    .white-card-submissions {
-      display: flex;
-      .player-submissions {
-        cursor: pointer;
+      .white-card-submissions {
         display: flex;
-        flex-direction: column;
-        &:hover {
-          .card {
-            box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2);
+        .player-submissions {
+          cursor: pointer;
+          display: flex;
+          flex-direction: column;
+
+          &:hover {
+            .card {
+              box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2);
+            }
           }
         }
-      }
+      }  
     }
+    
   }
 
   .bottom-row {
@@ -103,10 +109,6 @@
   }
 
   .scores-container {
-    position: aboslute;
-    top: 0;
-    right: 0;
-
     display: flex;
     flex-direction: column;
 
diff --git a/client/src/app/game/game.component.ts b/client/src/app/game/game.component.ts
index 7bbd85f..2d2af5b 100644
--- a/client/src/app/game/game.component.ts
+++ b/client/src/app/game/game.component.ts
@@ -25,6 +25,11 @@ export class GameComponent {
   private scores: BehaviorSubject<(string | number)[][]> = new BehaviorSubject<(string | number)[][]>([]);
   private thisTurnSubmitted: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);
 
+  // 0: Submitting cards
+  // 1: Picking from submissions
+  // 2: Viewing winning submission
+  private currentStage: BehaviorSubject<number> = new BehaviorSubject<number>(0);
+
   private canSelectMoreCards: Observable<boolean> = 
     combineLatest(this.isMyTurn, this.numSpaces, this.selectedCards, this.thisTurnSubmitted)
     .pipe(map(([isMyTurn, numSpaces, selectedCards, thisTurnSubmitted]) => {
@@ -67,7 +72,6 @@ export class GameComponent {
         // When we receive a black card, a new turn has been started, so remove previous submissions
         // TODO: Clean up new turn emissions
         this.whiteCardSubmissions.next([]);
-
         this.thisTurnSubmitted.next(false);
       }
     });
@@ -216,4 +220,10 @@ export class GameComponent {
   public getSelectionBoxLength(): Observable<string> {
     return this.selectionBoxLength;
   }
+
+  public isStage(stage: number): Observable<boolean> {
+    return this.currentStage.pipe(map((currentStage) => {
+      return currentStage === stage;
+    }));
+  }
 }
\ No newline at end of file
